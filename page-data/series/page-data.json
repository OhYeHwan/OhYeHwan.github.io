{"componentChunkName":"component---src-pages-series-jsx","path":"/series/","result":{"data":{"site":{"siteMetadata":{"title":"11"}},"allMarkdownRemark":{"group":[{"fieldValue":"Clean Code","totalCount":2},{"fieldValue":"JavaScript","totalCount":1},{"fieldValue":"arrow","totalCount":1},{"fieldValue":"this","totalCount":1}],"nodes":[{"excerpt":"의미 있는 이름 소프트웨어에서 이름은 어디나 쓰인다. 의도를 분명히 밝혀라 코드가 하는 일을 짐작하기 어렵다. 코드의 단순성은 변하지 않았지만 좋은 이름을 통해 함수가 하는 일을 이해하기 쉬워졌다. 그릇된 정보를 피하라 의미 있게 구분하라 발음하기 쉬운 이름을 사용하라 검색하기 쉬운 이름을 사용하라 인코딩을 피하라 자신의 기억력을 자랑하지 마라 클래스 이…","fields":{"slug":"/clean-code-meaningful-name/"},"frontmatter":{"date":"February 09, 2022","update":"Feb 09, 2022","title":"[Clean Code] 의미 있는 이름","tags":["Clean Code"],"series":"클린 코드"}},{"excerpt":"나중은 결코 오지 않는다. 깨끗한 코드란? 인간이 읽기 좋은 코드다. 단순하고 직접적이며 잘 쓴 문장처럼 읽혀야 한다. 다른 사람이 고치기 쉬워야한다. 세세한 사항까지 꼼꼼하게 처리하는 코드다. 주의 깊게 작성한 코드다. 결론 대부분 시간에 쫒겨 나쁜 코드를 작성하게 된다. 하지만 나쁜 코드는 나쁜 코드를 부른다. 그리고 나쁜 코드가 쌓일수록 생산성은 떨…","fields":{"slug":"/clean-code/"},"frontmatter":{"date":"February 09, 2022","update":"Feb 09, 2022","title":"[Clean Code] 깨끗한 코드","tags":["Clean Code"],"series":"클린 코드"}},{"excerpt":"화살표 함수와 영역 책에서는 다음과 같은 코드를 제시하며 화살표 함수와 영역에 대해서 설명을 하고 있습니다. 위 코드는 \"gangwon\"이라는 객체의 print 프로퍼티에 메서드를 정의하고 이를 호출하는 과정에서 오류가 발생하였습니다.\n이는 setTimeout 메서드 내부에 정의된 함수의 this를 \"gangwon\"으로 생각하고 작성한 코드이기 때문에 발…","fields":{"slug":"/arrow-function-bind/"},"frontmatter":{"date":"January 25, 2022","update":"Jan 25, 2022","title":"[JavaScript] 화살표 함수와 영역","tags":["JavaScript","this","arrow"],"series":"러닝 리액트"}}]}},"pageContext":{}},"staticQueryHashes":[]}